//-----------------------------------------------------------------------------
// <auto-generated> 
//   This code was generated by a tool. 
// 
//   Changes to this file may cause incorrect behavior and will be lost if  
//   the code is regenerated.
//
//   Tool: AllJoynCodeGenerator.exe
//
//   This tool is located in the Windows 10 SDK and the Windows 10 AllJoyn 
//   Visual Studio Extension in the Visual Studio Gallery.  
//
//   The generated code should be packaged in a Windows 10 C++/CX Runtime  
//   Component which can be consumed in any UWP-supported language using 
//   APIs that are available in Windows.Devices.AllJoyn.
//
//   Using AllJoynCodeGenerator - Invoke the following command with a valid 
//   Introspection XML file and a writable output directory:
//     AllJoynCodeGenerator -i <INPUT XML FILE> -o <OUTPUT DIRECTORY>
// </auto-generated>
//-----------------------------------------------------------------------------
#include "pch.h"

using namespace Microsoft::WRL;
using namespace Platform;
using namespace Windows::Devices::AllJoyn;
using namespace Windows::Foundation;
using namespace org::allseen::LSF::ControllerService::MasterScene;

void MasterSceneSignals::Initialize(_In_ alljoyn_busobject busObject, _In_ alljoyn_sessionid sessionId)
{
    m_busObject = busObject;
    m_sessionId = sessionId;

    auto interfaceDefinition = alljoyn_busattachment_getinterface(alljoyn_busobject_getbusattachment(busObject), "org.allseen.LSF.ControllerService.MasterScene");
    alljoyn_interfacedescription_getmember(interfaceDefinition, "MasterScenesApplied", &m_memberMasterScenesApplied);
    alljoyn_interfacedescription_getmember(interfaceDefinition, "MasterScenesCreated", &m_memberMasterScenesCreated);
    alljoyn_interfacedescription_getmember(interfaceDefinition, "MasterScenesDeleted", &m_memberMasterScenesDeleted);
    alljoyn_interfacedescription_getmember(interfaceDefinition, "MasterScenesNameChanged", &m_memberMasterScenesNameChanged);
    alljoyn_interfacedescription_getmember(interfaceDefinition, "MasterScenesUpdated", &m_memberMasterScenesUpdated);
}

void MasterSceneSignals::MasterScenesApplied(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberMasterSceneIDs)
{
    if (nullptr == m_busObject)
    {
        return;
    }

    size_t argCount = 1;
    alljoyn_msgarg arguments = alljoyn_msgarg_array_create(argCount);
    (void)TypeConversionHelpers::SetAllJoynMessageArg(alljoyn_msgarg_array_element(arguments, 0), "as", interfaceMemberMasterSceneIDs);
    
    alljoyn_busobject_signal(
        m_busObject, 
        NULL,  // Generated code only supports broadcast signals.
        m_sessionId,
        m_memberMasterScenesApplied,
        arguments,
        argCount, 
        0, // A signal with a TTL of 0 will be sent to every member of the session, regardless of how long it takes to deliver the message
        ALLJOYN_MESSAGE_FLAG_GLOBAL_BROADCAST, // Broadcast to everyone in the session.
        NULL); // The generated code does not need the generated signal message

    alljoyn_msgarg_destroy(arguments);
}

void MasterSceneSignals::CallMasterScenesAppliedReceived(_In_ MasterSceneSignals^ sender, _In_ MasterSceneMasterScenesAppliedReceivedEventArgs^ args)
{
    MasterScenesAppliedReceived(sender, args);
}

void MasterSceneSignals::MasterScenesCreated(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberMasterSceneIDs)
{
    if (nullptr == m_busObject)
    {
        return;
    }

    size_t argCount = 1;
    alljoyn_msgarg arguments = alljoyn_msgarg_array_create(argCount);
    (void)TypeConversionHelpers::SetAllJoynMessageArg(alljoyn_msgarg_array_element(arguments, 0), "as", interfaceMemberMasterSceneIDs);
    
    alljoyn_busobject_signal(
        m_busObject, 
        NULL,  // Generated code only supports broadcast signals.
        m_sessionId,
        m_memberMasterScenesCreated,
        arguments,
        argCount, 
        0, // A signal with a TTL of 0 will be sent to every member of the session, regardless of how long it takes to deliver the message
        ALLJOYN_MESSAGE_FLAG_GLOBAL_BROADCAST, // Broadcast to everyone in the session.
        NULL); // The generated code does not need the generated signal message

    alljoyn_msgarg_destroy(arguments);
}

void MasterSceneSignals::CallMasterScenesCreatedReceived(_In_ MasterSceneSignals^ sender, _In_ MasterSceneMasterScenesCreatedReceivedEventArgs^ args)
{
    MasterScenesCreatedReceived(sender, args);
}

void MasterSceneSignals::MasterScenesDeleted(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberMasterSceneIDs)
{
    if (nullptr == m_busObject)
    {
        return;
    }

    size_t argCount = 1;
    alljoyn_msgarg arguments = alljoyn_msgarg_array_create(argCount);
    (void)TypeConversionHelpers::SetAllJoynMessageArg(alljoyn_msgarg_array_element(arguments, 0), "as", interfaceMemberMasterSceneIDs);
    
    alljoyn_busobject_signal(
        m_busObject, 
        NULL,  // Generated code only supports broadcast signals.
        m_sessionId,
        m_memberMasterScenesDeleted,
        arguments,
        argCount, 
        0, // A signal with a TTL of 0 will be sent to every member of the session, regardless of how long it takes to deliver the message
        ALLJOYN_MESSAGE_FLAG_GLOBAL_BROADCAST, // Broadcast to everyone in the session.
        NULL); // The generated code does not need the generated signal message

    alljoyn_msgarg_destroy(arguments);
}

void MasterSceneSignals::CallMasterScenesDeletedReceived(_In_ MasterSceneSignals^ sender, _In_ MasterSceneMasterScenesDeletedReceivedEventArgs^ args)
{
    MasterScenesDeletedReceived(sender, args);
}

void MasterSceneSignals::MasterScenesNameChanged(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberMasterSceneIDs)
{
    if (nullptr == m_busObject)
    {
        return;
    }

    size_t argCount = 1;
    alljoyn_msgarg arguments = alljoyn_msgarg_array_create(argCount);
    (void)TypeConversionHelpers::SetAllJoynMessageArg(alljoyn_msgarg_array_element(arguments, 0), "as", interfaceMemberMasterSceneIDs);
    
    alljoyn_busobject_signal(
        m_busObject, 
        NULL,  // Generated code only supports broadcast signals.
        m_sessionId,
        m_memberMasterScenesNameChanged,
        arguments,
        argCount, 
        0, // A signal with a TTL of 0 will be sent to every member of the session, regardless of how long it takes to deliver the message
        ALLJOYN_MESSAGE_FLAG_GLOBAL_BROADCAST, // Broadcast to everyone in the session.
        NULL); // The generated code does not need the generated signal message

    alljoyn_msgarg_destroy(arguments);
}

void MasterSceneSignals::CallMasterScenesNameChangedReceived(_In_ MasterSceneSignals^ sender, _In_ MasterSceneMasterScenesNameChangedReceivedEventArgs^ args)
{
    MasterScenesNameChangedReceived(sender, args);
}

void MasterSceneSignals::MasterScenesUpdated(_In_ Windows::Foundation::Collections::IVectorView<Platform::String^>^ interfaceMemberMasterSceneIDs)
{
    if (nullptr == m_busObject)
    {
        return;
    }

    size_t argCount = 1;
    alljoyn_msgarg arguments = alljoyn_msgarg_array_create(argCount);
    (void)TypeConversionHelpers::SetAllJoynMessageArg(alljoyn_msgarg_array_element(arguments, 0), "as", interfaceMemberMasterSceneIDs);
    
    alljoyn_busobject_signal(
        m_busObject, 
        NULL,  // Generated code only supports broadcast signals.
        m_sessionId,
        m_memberMasterScenesUpdated,
        arguments,
        argCount, 
        0, // A signal with a TTL of 0 will be sent to every member of the session, regardless of how long it takes to deliver the message
        ALLJOYN_MESSAGE_FLAG_GLOBAL_BROADCAST, // Broadcast to everyone in the session.
        NULL); // The generated code does not need the generated signal message

    alljoyn_msgarg_destroy(arguments);
}

void MasterSceneSignals::CallMasterScenesUpdatedReceived(_In_ MasterSceneSignals^ sender, _In_ MasterSceneMasterScenesUpdatedReceivedEventArgs^ args)
{
    MasterScenesUpdatedReceived(sender, args);
}

